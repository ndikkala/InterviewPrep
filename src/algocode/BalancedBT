import java.util.*;

class Solution{
  static Node root;
  
  public static void main(String [] args){
    
    Solution s =  new Solution();
    root = s.new Node(5);
    
    root.left = s.new Node(3);
    root.right = s.new Node(7);
    
    root.left.left = s.new Node(2);
    root.left.right = s.new Node(4);
    root.right.left = s.new Node(6);
    root.right.right = s.new Node(8);
    
     root.left.right.left = s.new Node(12);
     root.left.right.right = s.new Node(13);
    
     root.right.right.left = s.new Node(11);
     root.right.right.right = s.new Node(9);
     root.right.right.right.right = s.new Node(10);
    
    //int k = 3;
    
    if(isBalanced(root)){
      System.out.println("true");
    }
    else{
      System.out.println("false");
    }
   
  }
  
  

  public static boolean isBalanced(Node root){
      
      if(root.left==null && root.right == null){
         return true;
      }
    
    if(Math.abs(getHeight(root.left)-getHeight(root.right)) <=1){
      return true;
    }
    else{
      return false;
    }
       
    
    
    //return (isBalanced(root.left) && isBalanced(root.right));
    
    
  }
  
  public static int getHeight(Node root){
     if(root==null){
       return 0;
     }
    
     int left = getHeight(root.left);
     int right = getHeight(root.right);
    
     return Math.max(left, right)+1;
    
  }
  
 
  
  class Node{
    int data;
    Node left;
    Node right;
    
    Node(int data){
      this.data =  data;
      this.left =  null;
      this.right = null;
    }
    
  }
  
}
