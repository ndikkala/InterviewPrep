import java.util.*;

class Solution{
  static Node root;
  
  public static void main(String [] args){
    
    Solution s =  new Solution();
    root = s.new Node(1);
    root.left = s.new Node(2);
    root.right = s.new Node(3);
    root.left.left = s.new Node(4);
    root.left.right = s.new Node(5);
    root.right.left = s.new Node(6);
    root.right.right = s.new Node(7);
    
    root = invert(root);
    printTree(root);
    
    
  }
  
  
  public static Node invert(Node root){
    if(root.left==null && root.right==null){
      return root;
    }
    
    Node leftTemp = root.left;
   
    //swap current left and right child
    root.left = root.right;
    root.right = leftTemp;
    
    //invert all nodes left subtree and all nodes in right subtree
    invert(root.left);
    invert(root.right);
    return root;
  }
  
  public static void printTree(Node root){
      
   if(root!=null){
     System.out.println(root.data);
     printTree(root.left);
     printTree(root.right);
   }
 
  }

  
  class Node{
    int data;
    Node left;
    Node right;
    
    Node(int data){
      this.data =  data;
      this.left =  null;
      this.right = null;
    }
    
  }
  
}
